import scrapy


class SofarsoundsSpider(scrapy.Spider):
    name = "sofarsounds"
    
    headers = {
        'Cookie': '_session_id=dc8352dafcfa2d66550170970ab675de; first_seen_at=2023-10-30T00:36:40.233Z; _gcl_au=1.1.735737926.1698626203; _ga=GA1.1.1366446841.1698626203; ajs_anonymous_id=2214c51e-33f5-4d42-a93f-821c8ca11ae6; _omappvp=zpAzG6X9eackxnzMlwNDBxAtLDQuLrDhBORw8EBnqpJUyOcfwj67ZbjXLXA55Ud3zcAUpMzFtejDwGwIeHEUthGczhTbxuE5; _fbp=fb.1.1698626207964.851223877; _clck=pju8xs|2|fga|0|1398; _hjSessionUser_637941=eyJpZCI6IjIzNzA4MzYwLWI1YmUtNTIyNi05ZDFkLTM5Y2I1ODJiZjAxMCIsImNyZWF0ZWQiOjE2OTg2MjYyMTM5MjMsImV4aXN0aW5nIjp0cnVlfQ==; __stripe_mid=3849a4b5-e04d-4ebf-8bb4-3aa50cf8b3c4098e13; __kla_id=eyJjaWQiOiJObUpqWm1GbU5EUXRPRGhrWkMwMFlqRmpMVGxpTURNdE1qZGpOalF3TkRkbVptRTEiLCIkcmVmZXJyZXIiOnsidHMiOjE2OTg2MjYyMDksInZhbHVlIjoiIiwiZmlyc3RfcGFnZSI6Imh0dHBzOi8vd3d3LnNvZmFyc291bmRzLmNvbS9jaXRpZXMvc2VhdHRsZSJ9LCIkbGFzdF9yZWZlcnJlciI6eyJ0cyI6MTY5ODY0MDM2MiwidmFsdWUiOiIiLCJmaXJzdF9wYWdlIjoiaHR0cHM6Ly93d3cuc29mYXJzb3VuZHMuY29tL2NpdGllcy9zZWF0dGxlIn19; _uetsid=68a77ce076bc11eeb9e2c3d2367c1fd2; _uetvid=68a7b5d076bc11eeb0e3390a1399bf1b; _clsk=1dv6jln|1698640362308|3|1|s.clarity.ms/collect; _dd_s=rum=0&expire=1698641268059&logs=1&id=e74a51bf-1d00-48b0-ac63-68b134838d89&created=1698640034543; _ga_1SCPZQWTR0=GS1.1.1698626202.1.1.1698640368.52.0.0',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 Edg/118.0.2088.76',
        'Referer': 'https://www.sofarsounds.com/cities/seattle',
        'Token': 'undefined'
    }
    
    def start_requests(self):
        
        request = scrapy.FormRequest(url="https://www.sofarsounds.com/api/v2/graphql?on=GetEventsForEventGrid",
                                     formdata={"operationName":"GetEventsForEventGrid","variables":{"page":"1","perPage":"null","excludeSoldOut":"false","excludePresale":"true","excludeNonPresale":"false","upcoming":"true","published":"true","globallyPromoted":"true","loadDynamicHeaderImages":"true","city":"seattle","includeNearbySecondaryCities":"true","skipPagination":"true"},"query":"fragment EventPropertyMap on Event {\n  propertyMap {\n    accessible {\n      id\n      key\n      name\n      __typename\n    }\n    alcoholForSale {\n      id\n      key\n      name\n      __typename\n    }\n    alcoholNotPermittedOrSold {\n      id\n      key\n      name\n      __typename\n    }\n    byob {\n      id\n      key\n      name\n      __typename\n    }\n    faceMaskRequired {\n      id\n      key\n      name\n      __typename\n    }\n    faceMaskNotRequired {\n      id\n      key\n      name\n      __typename\n    }\n    foodAvailableForSale {\n      id\n      key\n      name\n      __typename\n    }\n    noOutsideFood {\n      id\n      key\n      name\n      __typename\n    }\n    outdoors {\n      id\n      key\n      name\n      __typename\n    }\n    over18Only {\n      id\n      key\n      name\n      __typename\n    }\n    over21Only {\n      id\n      key\n      name\n      __typename\n    }\n    over23Only {\n      id\n      key\n      name\n      __typename\n    }\n    over25Only {\n      id\n      key\n      name\n      __typename\n    }\n    petPresent {\n      id\n      key\n      name\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nquery GetEventsForEventGrid($eventSearch: String, $city: String, $includeNearbySecondaryCities: Boolean, $businessOwner: String, $neighborhood: String, $date: String, $numTicketsAvailableForSale: String, $theme: String, $tag: String, $offerId: Int, $openPositions: String, $artistIds: String, $curatorGroup: String, $roleAvailable: String, $isStaffedByCurrentUser: Boolean, $eventIds: [String], $excludeSoldOut: Boolean, $excludePresale: Boolean, $excludeNonPresale: Boolean, $indoorOutdoor: String, $isByob: Boolean, $maxSlotsTaken: Int, $upcoming: Boolean, $upcomingOrCurrent: Boolean, $published: Boolean, $globallyPromoted: Boolean, $type: String, $eventOrganizedAs: String, $attendeeTicketingFlow: String, $status: String, $minRemainingSpaces: Int, $loadDynamicHeaderImages: Boolean, $orderBy: String, $orderDirection: String, $page: Int, $perPage: Int, $skipPagination: Boolean) {\n  events(eventSearch: $eventSearch, city: $city, includeNearbySecondaryCities: $includeNearbySecondaryCities, businessOwner: $businessOwner, neighborhood: $neighborhood, date: $date, numTicketsAvailableForSale: $numTicketsAvailableForSale, theme: $theme, tag: $tag, offerId: $offerId, openPositions: $openPositions, artistIds: $artistIds, curatorGroup: $curatorGroup, roleAvailable: $roleAvailable, isStaffedByCurrentUser: $isStaffedByCurrentUser, eventIds: $eventIds, excludeSoldOut: $excludeSoldOut, excludePresale: $excludePresale, excludeNonPresale: $excludeNonPresale, indoorOutdoor: $indoorOutdoor, isByob: $isByob, maxSlotsTaken: $maxSlotsTaken, globallyPromoted: $globallyPromoted, upcoming: $upcoming, upcomingOrCurrent: $upcomingOrCurrent, published: $published, type: $type, eventOrganizedAs: $eventOrganizedAs, attendeeTicketingFlow: $attendeeTicketingFlow, status: $status, minRemainingSpaces: $minRemainingSpaces, loadDynamicHeaderImages: $loadDynamicHeaderImages, orderBy: $orderBy, orderDirection: $orderDirection, page: $page, perPage: $perPage, skipPagination: $skipPagination) {\n    events {\n      id\n      guestsArriveAt\n      localStartsAt\n      startsAt\n      price\n      isPurchasable\n      isAvailable\n      isSoldOut\n      city {\n        id\n        title\n        timezone\n        country {\n          id\n          countryCode\n          currency\n          currencySymbol\n          __typename\n        }\n        __typename\n      }\n      venue {\n        id\n        venueType\n        neighborhood {\n          title\n          id\n          __typename\n        }\n        __typename\n      }\n      theme {\n        id\n        title\n        __typename\n      }\n      attendeeFlow\n      ...EventPropertyMap\n      attendee {\n        id\n        tickets {\n          id\n          __typename\n        }\n        __typename\n      }\n      imageUrl\n      isVenueConfirmed\n      onPresale\n      __typename\n    }\n    metadata {\n      totalRecords\n      currentPage\n      __typename\n    }\n    __typename\n  }\n}\n"},
                                    headers=self.headers,
                                    callback= self.parse,
                        )
        yield request

    def parse(self, response):
        yield {
            'res': response.text
        }
